.dx-fieldset
	.dx-fieldset-header Presupuesto en Riesgo
	.dx-field
		.dx-field-label Organismo
		.dx-field-value
			#slcOrganismo
	.dx-field
		.dx-field-label Operación
		.dx-field-value
			#slcOperacion
	.dx-field
		.dx-field-label Dependencia
		.dx-field-value
			#slcDependencia
#dgdRiesgo.margin-bottom
#chtRiesgo

script.

	var organismos = !{JSON.stringify(organismos)},
		operaciones = !{JSON.stringify(operaciones)},
		dependencias = !{JSON.stringify(dependencias)},
		dependenciasRiesgo = !{JSON.stringify(dependenciasRiesgo)},
		totales = {programado: 0, riesgo: 0},
		mes = !{JSON.stringify(mes)},
		totalRiesgo = 0,
		chtRiesgo = [
			{tipo: 'Ejecutado', area: 0},
			{tipo: 'Pendiente por Ejecutar', area: 0},
			{tipo: 'Riesgo', area: 0}
		],
		dataGrid,
		chart
	
	for (let i = 0, len = dependenciasRiesgo.length; i < len; i++) {
		totales.riesgo += dependenciasRiesgo[i].riesgo
		totales.programado += dependenciasRiesgo[i].programado_total

		chtRiesgo[0].area += dependenciasRiesgo[i].ejecutado_al_mes
		chtRiesgo[1].area += dependenciasRiesgo[i].por_ejecutar
		chtRiesgo[2].area += dependenciasRiesgo[i].riesgo
	}

	function obtenerDatos() {

		function filtrar (data) {

			let filtros = {
				abrev_organismo_financiero: $("#slcOrganismo").dxSelectBox("instance").option('text'),
				nro_operacion: $("#slcOperacion").dxSelectBox("instance").option('text'),
				nombre_direccion: $("#slcDependencia").dxSelectBox("instance").option('text')
			}

			if (filtros.abrev_organismo_financiero && filtros.nro_operacion && filtros.nombre_direccion) {

				$('#tituloResumen').text(`Presupuesto en Riesgo Programa Bono Vida Mejor por ${filtros.abrev_organismo_financiero}, ${filtros.nro_operacion}, ${filtros.nombre_direccion}, acumulado al Mes de ${mes}`)
				chart.option('title.text',`Presupuesto en Riesgo Programa Bono Vida Mejor por ${filtros.abrev_organismo_financiero}, ${filtros.nro_operacion}, ${filtros.nombre_direccion}, acumulado al Mes de ${mes}`)
				
				return data.abrev_organismo_financiero == filtros.abrev_organismo_financiero
					&& data.nro_operacion == filtros.nro_operacion
					&& data.nombre_direccion == filtros.nombre_direccion

			} else if (filtros.abrev_organismo_financiero && filtros.nro_operacion) {
				
				$('#tituloResumen').text(`Presupuesto en Riesgo Programa Bono Vida Mejor por ${filtros.abrev_organismo_financiero}, ${filtros.nro_operacion}, acumulado al Mes de ${mes}`)
				chart.option('title.text',`Presupuesto en Riesgo Programa Bono Vida Mejor por ${filtros.abrev_organismo_financiero}, ${filtros.nro_operacion}, acumulado al Mes de ${mes}`)
				
				return data.abrev_organismo_financiero == filtros.abrev_organismo_financiero
					&& data.nro_operacion == filtros.nro_operacion
			
			} else if (filtros.abrev_organismo_financiero && filtros.nombre_direccion) {
				
				$('#tituloResumen').text(`Presupuesto en Riesgo Programa Bono Vida Mejor por ${filtros.abrev_organismo_financiero}, ${filtros.nombre_direccion}, acumulado al Mes de ${mes}`)
				chart.option('title.text',`Presupuesto en Riesgo Programa Bono Vida Mejor por ${filtros.abrev_organismo_financiero}, ${filtros.nombre_direccion}, acumulado al Mes de ${mes}`)
				
				return data.abrev_organismo_financiero == filtros.abrev_organismo_financiero
					&& data.nombre_direccion == filtros.nombre_direccion
			
			} else if (filtros.nro_operacion && filtros.nombre_direccion) {
				
				$('#tituloResumen').text(`Presupuesto en Riesgo Programa Bono Vida Mejor por ${filtros.nro_operacion}, ${filtros.nombre_direccion}, acumulado al Mes de ${mes}`)
				chart.option('title.text',`Presupuesto en Riesgo Programa Bono Vida Mejor por ${filtros.nro_operacion}, ${filtros.nombre_direccion}, acumulado al Mes de ${mes}`)
				
				return data.nro_operacion == filtros.nro_operacion
					&& data.nombre_direccion == filtros.nombre_direccion
			
			} else if (filtros.abrev_organismo_financiero) {
				
				$('#tituloResumen').text(`Presupuesto en Riesgo Programa Bono Vida Mejor por ${filtros.abrev_organismo_financiero}, acumulado al Mes de ${mes}`)
				chart.option('title.text',`Presupuesto en Riesgo Programa Bono Vida Mejor por ${filtros.abrev_organismo_financiero}, acumulado al Mes de ${mes}`)
				
				return data.abrev_organismo_financiero == filtros.abrev_organismo_financiero
			
			} else if (filtros.nro_operacion) {
				
				$('#tituloResumen').text(`Presupuesto en Riesgo Programa Bono Vida Mejor por ${filtros.nro_operacion}, acumulado al Mes de ${mes}`)
				chart.option('title.text',`Presupuesto en Riesgo Programa Bono Vida Mejor por ${filtros.nro_operacion}, acumulado al Mes de ${mes}`)
				return data.nro_operacion == filtros.nro_operacion
			
			} else if (filtros.nombre_direccion) {
				
				$('#tituloResumen').text(`Presupuesto en Riesgo Programa Bono Vida Mejor por ${filtros.nombre_direccion}, acumulado al Mes de ${mes}`)
				chart.option('title.text',`Presupuesto en Riesgo Programa Bono Vida Mejor por ${filtros.nombre_direccion}, acumulado al Mes de ${mes}`)
				
				return data.nombre_direccion == filtros.nombre_direccion
			
			} else {

				$('#tituloResumen').text(`Presupuesto en Riesgo Programa Bono Vida Mejor acumulado al Mes de ${mes}`)
				chart.option('title.text',`Presupuesto en Riesgo Programa Bono Vida Mejor acumulado al Mes de ${mes}`)
			
				return data
			}
		}

		let dataSource = dependenciasRiesgo.filter(filtrar)

		for (let i = 0; i <= 2; i++) {
			chtRiesgo[i].area = 0
		}

		for (let i = 0, len = dataSource.length; i < len; i++) {
			chtRiesgo[0].area += dataSource[i].ejecutado_al_mes
			chtRiesgo[1].area += dataSource[i].por_ejecutar
			chtRiesgo[2].area += dataSource[i].riesgo
		}

		dataGrid.option('dataSource', dataSource)
		chart.option('dataSource', chtRiesgo)

	}

	$( () => {

		$('#slcOrganismo').dxSelectBox({
			showClearButton: true,
			dataSource: organismos,
			placeholder: 'Seleccione un organismo',
			displayExpr: "abrev_organismo_financiero",
			valueExpr: "abrev_organismo_financiero",
			onValueChanged: (data) => {
				obtenerDatos()
			}
		})

		$('#slcOperacion').dxSelectBox({
			showClearButton: true,
			dataSource: operaciones,
			placeholder: 'Seleccione una operación',
			displayExpr: 'nro_operacion',
			valueExpr: 'nro_operacion',
			onValueChanged: (data) => {
				obtenerDatos()
			}
		})

		$('#slcDependencia').dxSelectBox({
			showClearButton: true,
			dataSource: dependencias,
			displayExpr: 'nombre_direccion',
			valueExpr: 'nombre_direccion',
			onValueChanged: (data) => {
				obtenerDatos()
			}
		})

		dataGrid = $('#dgdRiesgo').dxDataGrid({
			dataSource: dependenciasRiesgo,
			paging: {
				pageSize: 10
			},
			pager: {
				showPageSizeSelector: true,
				allowedPageSizes: [5, 10, 20],
				showInfo: true
			},
			columnAutoWidth: true,
			showColumnLines: true,
			showRowLines: true,
			rowAlternationEnabled: true,
			showBorders: false,
			width: $('section').width(),
			wordWrapEnabled: true,
			columnHidingEnabled: true,
			/*
				'export': {
					enabled: true,
					fileName: 'POA_PEP_' + $('#frmFiltros').dxForm('instance').getEditor('cod_operacion').option('text') + '_AÑO_' + $('#frmFiltros').dxForm('instance').getEditor('año_actividad').option('text')
				},
				columnFixing: { 
					enabled: true
				},
				scrolling: {
					useNative: true
				},
			*/
			columns: [
				{//numero
					dataField: 'numero',
					visible: false
				},
				{//operaciones
					dataField: 'abrev_organismo_financiero',
					caption: 'Organismos'
				},
				{//organismos financiero
					dataField: 'nro_operacion',
					caption: 'No. Operación'
				},
				{
					dataField: 'nombre_direccion',
					caption: 'Dependencia'
				},
				{
					dataField: 'riesgo',
					caption: 'Monto en Riesgo',
					calculateDisplayValue: (data) => {									
						return '$' + data.riesgo.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, '$1,')
					}
				},
				{
					caption: '% Presupuesto',
					calculateDisplayValue: (data) => {									
						return ( (data.riesgo * 100) / totales.riesgo ).toFixed(0).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, '$1,') + '%'
					}
				}
			],
			summary: {
				totalItems: [
					{
						column: 'abrev_organismo_financiero',
						summaryType: 'min',
						customizeText: (data) => {
							return 'TOTAL EN RIESGO'
						}
					},
					{
						column: 'riesgo',
						summaryType: 'sum',
						showInColumn: 'nro_operacion',
						customizeText: (data) => {
							return '$' + data.value.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, '$1,')
						}
					},
					{
						column: 'nro_operacion',
						summaryType: 'min',
						showInColumn: 'nombre_direccion',
						customizeText: (data) => {
							return '% EN RIESGO DEL PRESUPUESTO TOTAL'
						}
					},
					{
						column: 'riesgo',
						summaryType: 'sum',
						customizeText: (data) => {
							return ( (data.value * 100) / totales.programado).toFixed(2) + '%'
						}
					}
				]
			}
		}).dxDataGrid("instance")

		chart = $('#chtRiesgo').dxPieChart({
			dataSource: chtRiesgo,
			series: [
				{
					argumentField: 'tipo',
					border: {
						visible: true
					},
					valueField: 'area',
					label: {
						visible: true,
						position: 'inside',
						customizeText: (arg) => {
							return '$' +  arg.valueText.toString().replace(/(\d)(?=(\d\d\d)+(?!\d))/g, '$1,') + " (" + arg.percentText + ")";
						}
					}
				}
			],
			title: {
				text:  'Presupuesto Programa Bono Vida Mejor acumulado al Mes de ' + mes,
				font: {
					size: 20
				}
			},
			legend: {
				verticalAlignment: 'bottom',
				horizontalAlignment: 'center'
			}
		}).dxPieChart("instance")

	})